{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","setMovies","useState","query","setQuery","isLoading","setIsLoading","isFound","setIsFound","setMovie","handleOnSubmit","event","preventDefault","fetch","then","res","json","catch","Response","Error","getMovie","trim","toLowerCase","response","Object","hasOwn","Poster","Title","Plot","imdbID","newMovie","finally","htmlFor","type","id","placeholder","classNames","value","onChange","target","handleInputChange","disabled","length","onClick","App","some","prew","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.288ec07f.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport './FindMovie.scss';\nimport { Movie } from '../../types/Movie';\nimport { getMovie } from '../../api';\nimport { MovieData } from '../../types/MovieData';\nimport { ResponseError } from '../../types/ReponseError';\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  setMovies: (value: Movie) => void,\n};\n\nexport const FindMovie: React.FC<Props> = ({ setMovies }) => {\n  const [query, setQuery] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [isFound, setIsFound] = useState<ResponseError | null>(null);\n  const [movie, setMovie] = useState<Movie | null>(null);\n\n  const handleOnSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n    setIsLoading(true);\n\n    if (query) {\n      const preparedQuery = query.trim().toLowerCase();\n\n      getMovie(preparedQuery).then(response => {\n        if (Object.hasOwn(response, 'Title')) {\n          const {\n            Poster,\n            Title,\n            Plot,\n            imdbID,\n          } = response as MovieData;\n\n          const imgUrl = Poster === 'N/A'\n            ? 'https://via.placeholder.com/360x270.png?text=no%20preview'\n            : Poster;\n\n          const newMovie = {\n            title: Title,\n            description: Plot,\n            imgUrl,\n            imdbUrl: `https://www.imdb.com/title/${imdbID}`,\n            imdbId: imdbID,\n          };\n\n          setMovie(newMovie);\n          setIsFound(null);\n        }\n\n        if (Object.hasOwn(response, 'Error')) {\n          setIsFound(response as ResponseError);\n        }\n      }).finally(() => setIsLoading(false));\n    }\n  };\n\n  const handleAddButton = (element: Movie) => {\n    setMovies(element);\n    setMovie(null);\n    setQuery('');\n  };\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n    setIsFound(null);\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames('input', { 'is-danger': isFound?.Error })}\n              value={query}\n              onChange={(event) => handleInputChange(event)}\n            />\n          </div>\n\n          {isFound?.Error && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              disabled={query.length === 0}\n              className={classNames('button is-light', {\n                'is-loading': isLoading,\n              })}\n              onClick={(event) => handleOnSubmit(event)}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          {movie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={() => handleAddButton(movie)}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=dfca6fa2';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const handleAdding = (movie: Movie): void => {\n    const isMovieAded = movies.some(({ imdbId }) => imdbId === movie.imdbId);\n\n    if (isMovieAded) {\n      return;\n    }\n\n    setMovies((prew) => [...prew, movie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie\n          setMovies={handleAdding}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}